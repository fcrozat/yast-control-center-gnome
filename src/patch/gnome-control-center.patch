--- ./patch/../cut-n-paste/shell/control-center.c	2011-07-25 12:13:00.915871481 +0200
+++ ./patch/../control-center.c	2011-07-25 11:36:40.873059970 +0200
@@ -41,8 +41,10 @@
   exit (0);
 }
 
+#if 0
 static char **start_panels = NULL;
 static gboolean show_overview = FALSE;
+#endif
 static gboolean verbose = FALSE;
 static gboolean show_help = FALSE;
 static gboolean show_help_gtk = FALSE;
@@ -51,11 +53,15 @@
 const GOptionEntry all_options[] = {
   { "version", 0, G_OPTION_FLAG_NO_ARG, G_OPTION_ARG_CALLBACK, option_version_cb, NULL, NULL },
   { "verbose", 'v', 0, G_OPTION_ARG_NONE, &verbose, N_("Enable verbose mode"), NULL },
+#if 0
   { "overview", 'o', 0, G_OPTION_ARG_NONE, &show_overview, N_("Show the overview"), NULL },
+#endif
   { "help", 'h', G_OPTION_FLAG_HIDDEN, G_OPTION_ARG_NONE, &show_help, N_("Show help options"), NULL },
   { "help-all", 0, G_OPTION_FLAG_HIDDEN, G_OPTION_ARG_NONE, &show_help_all, N_("Show help options"), NULL },
   { "help-gtk", 0, G_OPTION_FLAG_HIDDEN, G_OPTION_ARG_NONE, &show_help_gtk, N_("Show help options"), NULL },
+#if 0
   { G_OPTION_REMAINING, '\0', 0, G_OPTION_ARG_FILENAME_ARRAY, &start_panels, N_("Panel to display"), NULL },
+#endif
   { NULL } /* end the list */
 };
 
@@ -71,13 +77,17 @@
   GError *error = NULL;
 
   verbose = FALSE;
+#if 0
   show_overview = FALSE;
+#endif
   show_help = FALSE;
+#if 0
   start_panels = NULL;
+#endif
 
   argv = g_application_command_line_get_arguments (command_line, &argc);
 
-  context = g_option_context_new (N_("- System Settings"));
+  context = g_option_context_new (N_("- Administrator Settings"));
   g_option_context_add_main_entries (context, all_options, GETTEXT_PACKAGE);
   g_option_context_set_translation_domain(context, GETTEXT_PACKAGE);
   g_option_context_add_group (context, gtk_get_option_group (TRUE));
@@ -115,6 +125,7 @@
 
   gnome_control_center_show (shell, GTK_APPLICATION (application));
 
+#if 0
   if (show_overview)
     {
       gnome_control_center_set_overview_page (shell);
@@ -138,17 +149,20 @@
             }
         }
     }
+#endif
 
   gnome_control_center_present (shell);
   gdk_notify_startup_complete ();
 
   g_strfreev (argv);
+#if 0
   if (start_panels != NULL)
     {
       g_strfreev (start_panels);
       start_panels = NULL;
     }
   show_overview = FALSE;
+#endif
 
   return retval;
 }
@@ -169,6 +183,8 @@
   GtkApplication *application;
   int status;
 
+  bindtextdomain (YAST_CC_PACKAGE, YASTLOCALEDIR);
+  bind_textdomain_codeset (YAST_CC_PACKAGE, "UTF-8");
   bindtextdomain (GETTEXT_PACKAGE, GNOMELOCALEDIR);
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
   textdomain (GETTEXT_PACKAGE);
@@ -178,13 +194,17 @@
   gtk_init (&argc, &argv);
   cc_shell_log_init ();
 
+  GtkIconTheme * theme;
+  theme = gtk_icon_theme_get_default();
+  gtk_icon_theme_prepend_search_path (theme, "/usr/share/YaST2/theme/current");
+
   /* register a symbolic icon size for use in sidebar lists */
   gtk_icon_size_register ("cc-sidebar-list", 24, 24);
 
   shell = gnome_control_center_new ();
 
   /* enforce single instance of this application */
-  application = gtk_application_new ("org.gnome.ControlCenter", G_APPLICATION_HANDLES_COMMAND_LINE);
+  application = gtk_application_new ("org.opensuse.yast-control-center-gnome", G_APPLICATION_HANDLES_COMMAND_LINE);
   g_signal_connect (application, "startup",
                     G_CALLBACK (application_startup_cb), shell);
   g_signal_connect (application, "command-line",
--- ./patch/../cut-n-paste/shell/gnome-control-center.c	2011-07-28 11:50:46.369276534 +0200
+++ ./patch/../gnome-control-center.c	2011-07-28 12:07:12.977644709 +0200
@@ -91,6 +91,33 @@
                 const gchar        *name,
                 const gchar        *icon_name)
 {
+  GDesktopAppInfo     *appinfo;
+  GdkAppLaunchContext *context;
+  GdkScreen           *screen;
+  GdkDisplay          *display;
+  GError              *error;
+
+  appinfo = g_desktop_app_info_new_from_filename (desktop_file);
+
+  screen = gtk_widget_get_screen (shell->priv->window);
+  display = gdk_screen_get_display (screen);
+  context = gdk_display_get_app_launch_context (display);
+  gdk_app_launch_context_set_screen (context, screen);
+  gdk_app_launch_context_set_timestamp (context, gtk_get_current_event_time ());
+
+  error = NULL;
+  g_app_info_launch_uris (G_APP_INFO (appinfo), NULL,
+                          (GAppLaunchContext *) context,
+                          &error);
+
+  if (error) {
+    g_printerr ("Could not launch '%s': %s\n", id, error->message);
+    g_clear_error (&error);
+  }
+
+  g_object_unref (context);
+  g_object_unref (appinfo);
+#if 0
   GnomeControlCenterPrivate *priv = shell->priv;
   GType panel_type = G_TYPE_INVALID;
   GList *panels, *l;
@@ -170,6 +197,7 @@
           g_warning ("Could not find the loadable module for panel '%s'", id);
         }
     }
+#endif
 }
 
 static void
@@ -685,7 +713,7 @@
 
   priv->store = (GtkListStore *) cc_shell_model_new ();
   priv->category_views = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);
-  priv->menu_tree = gmenu_tree_lookup (MENUDIR "/gnomecc.menu", 0);
+  priv->menu_tree = gmenu_tree_lookup ("YaST-gnome.menu", 0);
 
   if (priv->menu_tree == NULL)
     {
@@ -701,6 +729,7 @@
 static void
 load_panel_plugins (GnomeControlCenter *shell)
 {
+#if 0
   GList *modules;
 
   /* only allow this function to be run once to prevent modules being loaded
@@ -719,6 +748,7 @@
   modules = g_io_modules_load_all_in_directory (PANELS_DIR);
   g_list_free (modules);
 
+#endif
 }
 
 
@@ -978,7 +1008,16 @@
           screen = gtk_widget_get_screen (widget);
           monitor = gdk_screen_get_monitor_at_window (screen, window);
           gdk_screen_get_monitor_geometry (screen, monitor, &rect);
-          height = MIN (height + 10, rect.height - 120);
+          height = (rect.height * 3) / 5;
+        } else {
+          int          monitor;
+          GdkScreen   *screen;
+          GdkRectangle rect;
+
+          screen = gdk_screen_get_default ();
+          monitor = gdk_screen_get_primary_monitor (screen);
+          gdk_screen_get_monitor_geometry (screen, monitor, &rect);
+          height = (rect.height * 3) / 5;
         }
     }
   else
--- ./patch/../cut-n-paste/shell/shell.ui	2011-07-25 12:13:00.915871481 +0200
+++ ./patch/../shell.ui	2011-07-25 10:04:29.790594605 +0200
@@ -3,9 +3,9 @@
   <requires lib="gtk+" version="2.16"/>
   <!-- interface-naming-policy project-wide -->
   <object class="GtkWindow" id="main-window">
-    <property name="title" translatable="yes">System Settings</property>
-    <property name="resizable">False</property>
-    <property name="icon_name">preferences-desktop</property>
+    <property name="title" translatable="yes">Administrator Settings</property>
+    <property name="resizable">True</property>
+    <property name="icon_name">yast</property>
     <property name="window_position">center</property>
     <child>
       <object class="GtkVBox" id="vbox1">
